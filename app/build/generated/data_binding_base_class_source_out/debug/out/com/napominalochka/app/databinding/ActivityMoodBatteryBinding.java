// Generated by view binder compiler. Do not edit!
package com.napominalochka.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.napominalochka.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMoodBatteryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ProgressBar batteryProgressBar;

  @NonNull
  public final TextView batteryStatusText;

  @NonNull
  public final Button chargeButton;

  @NonNull
  public final TextView loveLevelText;

  private ActivityMoodBatteryBinding(@NonNull LinearLayout rootView,
      @NonNull ProgressBar batteryProgressBar, @NonNull TextView batteryStatusText,
      @NonNull Button chargeButton, @NonNull TextView loveLevelText) {
    this.rootView = rootView;
    this.batteryProgressBar = batteryProgressBar;
    this.batteryStatusText = batteryStatusText;
    this.chargeButton = chargeButton;
    this.loveLevelText = loveLevelText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMoodBatteryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMoodBatteryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_mood_battery, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMoodBatteryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.battery_progress_bar;
      ProgressBar batteryProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (batteryProgressBar == null) {
        break missingId;
      }

      id = R.id.battery_status_text;
      TextView batteryStatusText = ViewBindings.findChildViewById(rootView, id);
      if (batteryStatusText == null) {
        break missingId;
      }

      id = R.id.charge_button;
      Button chargeButton = ViewBindings.findChildViewById(rootView, id);
      if (chargeButton == null) {
        break missingId;
      }

      id = R.id.love_level_text;
      TextView loveLevelText = ViewBindings.findChildViewById(rootView, id);
      if (loveLevelText == null) {
        break missingId;
      }

      return new ActivityMoodBatteryBinding((LinearLayout) rootView, batteryProgressBar,
          batteryStatusText, chargeButton, loveLevelText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
