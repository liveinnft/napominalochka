package com.napominalochka.app.ui.secret;

import android.app.AlertDialog;
import android.os.Bundle;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;
import com.napominalochka.app.R;
import com.napominalochka.app.config.AppTexts;
import com.napominalochka.app.utils.SharedPrefsManager;

public class SecretSurpriseActivity extends AppCompatActivity {
    
    private TextView statusText, secretContentText, progressText;
    private Button unlockButton;
    private SharedPrefsManager prefsManager;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_secret_surprise);
        
        prefsManager = new SharedPrefsManager(this);
        
        initViews();
        updateUnlockStatus();
        
        if (getSupportActionBar() != null) {
            getSupportActionBar().setDisplayHomeAsUpEnabled(true);
            getSupportActionBar().setTitle(getString(R.string.secret_surprise));
        }
    }

    private void initViews() {
        statusText = findViewById(R.id.status_text);
        secretContentText = findViewById(R.id.secret_content_text);
        progressText = findViewById(R.id.progress_text);
        unlockButton = findViewById(R.id.unlock_button);
        
        unlockButton.setOnClickListener(v -> showUnlockDialog());
    }

    private void updateUnlockStatus() {
        boolean isUnlocked = prefsManager.isSecretUnlocked();
        int foundWords = prefsManager.getFoundSecretWordsCount();
        
        if (isUnlocked) {
            showUnlockedContent();
        } else {
            showLockedContent(foundWords);
        }
    }

    private void showLockedContent(int foundWords) {
        statusText.setText("üîí –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–û");
        progressText.setText("–ù–∞–π–¥–µ–Ω–æ —Å–ª–æ–≤: " + foundWords + "/10");
        secretContentText.setText("–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –±—É–¥–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:\n\n" +
                "‚Ä¢ –ü–æ—Å–ª–µ –æ—Ç–≥–∞–¥—ã–≤–∞–Ω–∏—è 10 –∫–æ–¥–æ–≤—ã—Ö —Å–ª–æ–≤ üóùÔ∏è\n" +
                "‚Ä¢ –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üé≤\n" +
                "‚Ä¢ –ö–æ–≥–¥–∞ –Ω–∞—Å—Ç—É–ø–∏—Ç –æ—Å–æ–±—ã–π –¥–µ–Ω—å üìÖ\n\n" +
                "–í–Ω—É—Ç—Ä–∏ –∂–¥–µ—Ç —Å–∞–º—ã–π –≤–∞–∂–Ω—ã–π —Å—é—Ä–ø—Ä–∏–∑! üíù\n\n" +
                "–ü–æ–¥—Å–∫–∞–∑–∫–∞: —ç—Ç–∞ —Ç–æ —á–µ–≥–æ –º—ã —á–∞—Å—Ç–∞ –Ω–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–≤–∏–Ω–∫—É—É!");
        
        unlockButton.setText(getString(R.string.enter_code));
        unlockButton.setVisibility(Button.VISIBLE);
    }

    private void showUnlockedContent() {
        statusText.setText("üéÅ –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ê–ù–û!");
        progressText.setText("–ù–∞–π–¥–µ–Ω–æ —Å–ª–æ–≤: 10/10");
        secretContentText.setText(AppTexts.SECRET_MESSAGE);
        
        unlockButton.setVisibility(Button.GONE);
    }

    private void showUnlockDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("üóùÔ∏è " + getString(R.string.enter_code));
        
        EditText input = new EditText(this);
        input.setHint("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ...");
        builder.setView(input);
        
        builder.setPositiveButton(getString(R.string.unlock), (dialog, which) -> {
            String enteredCode = input.getText().toString().trim().toUpperCase();
            
            boolean wordFound = false;
            for (String secretCode : AppTexts.SECRET_CODES) {
                if (enteredCode.equals(secretCode)) {
                    if (!prefsManager.isSecretWordFound(secretCode)) {
                        prefsManager.addFoundSecretWord(secretCode);
                        wordFound = true;
                        showWordFoundSuccess(secretCode);
                    } else {
                        showWordAlreadyFound(secretCode);
                    }
                    break;
                }
            }
            
            if (!wordFound) {
                showUnlockFailure();
            }
            
            updateUnlockStatus();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–µ–∫—Ä–µ—Ç
            if (prefsManager.getFoundSecretWordsCount() >= 10) {
                prefsManager.setSecretUnlocked(true);
                showUnlockSuccess();
                updateUnlockStatus();
            }
        });
        
        builder.setNegativeButton(getString(R.string.cancel), null);
        builder.show();
    }

    private void showWordFoundSuccess(String word) {
        int foundCount = prefsManager.getFoundSecretWordsCount();
        new AlertDialog.Builder(this)
                .setTitle("üéâ –û—Ç–ª–∏—á–Ω–æ!")
                .setMessage("–¢—ã –Ω–∞—à–ª–∞ —Å–ª–æ–≤–æ: " + word + "! üîì\n\n" +
                           "–ü—Ä–æ–≥—Ä–µ—Å—Å: " + foundCount + "/10 —Å–ª–æ–≤\n\n" +
                           "–ü—Ä–æ–¥–æ–ª–∂–∞–π –∏—Å–∫–∞—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞! üíù")
                .setPositiveButton("–ü—Ä–æ–¥–æ–ª–∂–∞—é! ü•≥", null)
                .show();
    }

    private void showWordAlreadyFound(String word) {
        new AlertDialog.Builder(this)
                .setTitle("üìù –£–∂–µ –Ω–∞–π–¥–µ–Ω–æ!")
                .setMessage("–°–ª–æ–≤–æ '" + word + "' —É–∂–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–Ω–µ–µ!\n\n" +
                           "–ü–æ–ø—Ä–æ–±—É–π –Ω–∞–π—Ç–∏ –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ! üí≠")
                .setPositiveButton("–ü–æ–Ω—è—Ç–Ω–æ ü§î", null)
                .show();
    }

    private void showUnlockSuccess() {
        new AlertDialog.Builder(this)
                .setTitle("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!")
                .setMessage("–¢—ã –Ω–∞—à–ª–∞ –≤—Å–µ 10 –∫–æ–¥–æ–≤—ã—Ö —Å–ª–æ–≤! üîì\n\n" +
                           "–°–µ–∫—Ä–µ—Ç–Ω—ã–π —Å—é—Ä–ø—Ä–∏–∑ —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–µ–Ω! üíù")
                .setPositiveButton("–£—Ä–∞! ü•≥", null)
                .show();
    }

    private void showUnlockFailure() {
        new AlertDialog.Builder(this)
                .setTitle("üîí –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥")
                .setMessage("–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑! üí≠\n\n")
                .setPositiveButton("–ü–æ–Ω—è—Ç–Ω–æ ü§î", null)
                .show();
    }

    @Override
    public boolean onSupportNavigateUp() {
        onBackPressed();
        return true;
    }
}