// –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let galleryItems = [];
let mediaFiles = new Map(); // –•—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
let currentFiles = [];

// –¢–µ–∫—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ AppTexts.java
let appTexts = {
    loveMessages: [
        "ü§ç –∫–æ—Ç–∫–Ω–æ—á–µ–∫ –º–æ–π –ª—é–±–∏–º—ã–π, —Ç—ã —É –º–µ–Ω—è —Å–∞–º–∞—è —Å–∞–º–∞—è!!",
        "üíï –º—ã —Å–æ –≤—Å–µ–º –≤—Å–µ–º —Å–ø—Ä–∞–≤–∏–º—Å—è, —è –∫–ª—è–Ω—É—Å—å!!",
        "üåü —Ç—ã –º–æ—è –æ–≥—Ä–æ–º–Ω–∞—è —É–º–Ω–∏—á–∫–∞ –∏ —è –≥–æ—Ä–∂—É—Å—å —Ç–æ–±–æ–π –ø—Ä—è–º!!",
        "ü´Ç –∫–∏—Å, —è —Ç–µ–±—è –Ω–µ –æ—Å—Ç–∞–≤–ª—é –∫–∞–∫–∞—è —Å–∏—Ç—É–∞—Ü–∏—è –±—ã –Ω–µ —Å–ª—É—á–∏–ª–∞—Å—å",
        "üí™ –ø—Ä–∏ –ª—é–±–æ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ç–µ–±–µ –ø–æ–º–æ—á—å —è —ç—Ç–æ —Å–¥–µ–ª–∞—é!!"
    ],
    missions: [
        ["–£—Ç—Ä–µ–Ω–Ω—è—è –Ω–µ–∂–Ω–æ—Å—Ç—å", "–ü–æ—à–ª–∏ –º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–∂–µ–ª–∞–Ω–∏–µ–º –¥–æ–±—Ä–æ–≥–æ —É—Ç—Ä–∞ üåÖ"],
        ["–°–µ–ª—Ñ–∏ —Å —É–ª—ã–±–∫–æ–π", "–°–¥–µ–ª–∞–π —Å–µ–ª—Ñ–∏ —Å —Å–∞–º–æ–π –∫—Ä–∞—Å–∏–≤–æ–π —É–ª—ã–±–∫–æ–π –∏ –ø—Ä–∏—à–ª–∏ –º–Ω–µ üòä"],
        ["–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç –¥–Ω—è", "–ù–∞–ø–∏—à–∏ –º–Ω–µ —Ç—Ä–∏ –≤–µ—â–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –≤–æ –º–Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è üíï"]
    ],
    jokes: [
        "–∫–æ—Ç–∫–Ω–æ—á–µ–∫, –∑–Ω–∞–µ—à—å –ø–æ—á–µ–º—É —è –Ω–µ –º–æ–≥—É –±–µ–∑ —Ç–µ–±—è? –ø–æ—Ç–æ–º—É —á—Ç–æ –±–µ–∑ —Ç–µ–±—è –∂–∏–∑–Ω—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–ª–∏—à–∫–æ–º —Å–µ—Ä—å–µ–∑–Ω–æ–π!! üòÑ",
        "- –¥–æ–∫—Ç–æ—Ä, —è –≤–ª—é–±–ª–µ–Ω!\n- —ç—Ç–æ –Ω–µ –±–æ–ª–µ–∑–Ω—å.\n- –∞ –ø–æ—á–µ–º—É —Ç–æ–≥–¥–∞ —Ç–∞–∫ –∫—Ä—É–∂–∏—Ç—Å—è –≥–æ–ª–æ–≤–∞ –æ—Ç —Ç–µ–±—è? üí´"
    ],
    facts: [
        "ü¶ã —Ñ–∞–∫—Ç: –±–∞–±–æ—á–∫–∏ –≤–∏–¥—è—Ç –º–∏—Ä –≤ —É–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç–µ. –Ω–æ –¥–∞–∂–µ –æ–Ω–∏ –Ω–µ –≤–∏–¥—è—Ç –Ω–∏—á–µ–≥–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–µ–µ —Ç–≤–æ–µ–π —É–ª—ã–±–∫–∏!",
        "üåü –∑–Ω–∞–µ—à—å –ª–∏ —Ç—ã —á—Ç–æ –≤ –≥–∞–ª–∞–∫—Ç–∏–∫–µ 100 –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤ –∑–≤–µ–∑–¥? –Ω–æ —Ç—ã –∑–∞—Ç–º–µ–≤–∞–µ—à—å –∏—Ö –≤—Å–µ!"
    ],
    journeyContent: [
        ["–î–µ–Ω—å 1: –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ", "–°–µ–≥–æ–¥–Ω—è –æ—Å–æ–±–µ–Ω–Ω—ã–π –¥–µ–Ω—å - –º—ã —Ç–æ–ª—å–∫–æ –∑–Ω–∞–∫–æ–º–∏–º—Å—è! –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –æ —Å–µ–±–µ —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ üíï"],
        ["–î–µ–Ω—å 2: –ü–µ—Ä–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è", "–ù–∞—à–∏ –ø–µ—Ä–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è... –ü–æ–º–Ω–∏—à—å —á—Ç–æ —Ç—ã —Ç–æ–≥–¥–∞ –ø–æ–¥—É–º–∞–ª–∞ –æ–±–æ –º–Ω–µ? üòä"]
    ]
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    loadTextCategory();
    updateStatistics();
    setupDragAndDrop();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    loadSavedData();
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ drag & drop
function setupDragAndDrop() {
    const dropZone = document.querySelector('.file-drop-zone');
    
    dropZone.addEventListener('dragover', function(e) {
        e.preventDefault();
        dropZone.classList.add('dragover');
    });
    
    dropZone.addEventListener('dragleave', function(e) {
        e.preventDefault();
        dropZone.classList.remove('dragover');
    });
    
    dropZone.addEventListener('drop', function(e) {
        e.preventDefault();
        dropZone.classList.remove('dragover');
        handleFiles(e.dataTransfer.files);
    });
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Å–µ–∫—Ü–∏—è–º–∏
function showSection(sectionId) {
    // –°–∫—Ä—ã—Ç—å –≤—Å–µ —Å–µ–∫—Ü–∏–∏
    document.querySelectorAll('.section').forEach(section => {
        section.classList.remove('active');
    });
    
    // –£–±—Ä–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö —Ç–∞–±–æ–≤
    document.querySelectorAll('.tab').forEach(tab => {
        tab.classList.remove('active');
    });
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å–µ–∫—Ü–∏—é
    document.getElementById(sectionId).classList.add('active');
    
    // –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–∞–±
    event.target.classList.add('active');
    
    // –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
    if (sectionId === 'export') {
        updateExportStatistics();
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤
function handleFiles(files) {
    currentFiles = Array.from(files);
    displayFilePreview();
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é —Ñ–∞–π–ª–æ–≤
function displayFilePreview() {
    const preview = document.getElementById('file-preview');
    preview.innerHTML = '';
    
    if (currentFiles.length === 0) {
        return;
    }
    
    preview.innerHTML = '<h4>üìÅ –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:</h4>';
    
    currentFiles.forEach((file, index) => {
        const fileDiv = document.createElement('div');
        fileDiv.style.display = 'inline-block';
        fileDiv.style.margin = '10px';
        fileDiv.style.textAlign = 'center';
        
        if (file.type.startsWith('image/')) {
            const img = document.createElement('img');
            img.src = URL.createObjectURL(file);
            img.style.maxWidth = '150px';
            img.style.maxHeight = '150px';
            img.style.borderRadius = '10px';
            fileDiv.appendChild(img);
        } else if (file.type.startsWith('video/')) {
            const video = document.createElement('video');
            video.src = URL.createObjectURL(file);
            video.controls = true;
            video.style.maxWidth = '150px';
            video.style.maxHeight = '150px';
            video.style.borderRadius = '10px';
            fileDiv.appendChild(video);
        }
        
        const fileName = document.createElement('p');
        fileName.textContent = file.name;
        fileName.style.marginTop = '5px';
        fileName.style.fontSize = '0.8rem';
        fileName.style.color = '#666';
        fileDiv.appendChild(fileName);
        
        preview.appendChild(fileDiv);
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –≥–∞–ª–µ—Ä–µ—é
function addGalleryItem() {
    const title = document.getElementById('item-title').value.trim();
    const description = document.getElementById('item-description').value.trim();
    
    if (!title || !description) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ');
        return;
    }
    
    if (currentFiles.length === 0) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è');
        return;
    }
    
    currentFiles.forEach(file => {
        const fileExtension = file.name.split('.').pop().toLowerCase();
        const type = file.type.startsWith('image/') ? 'photo' : 'video';
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ–¥ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        let androidFileName;
        if (type === 'photo') {
            const photoCount = galleryItems.filter(item => item.type === 'photo').length + 1;
            androidFileName = `photo${photoCount}.${fileExtension}`;
        } else {
            const videoCount = galleryItems.filter(item => item.type === 'video').length + 1;
            androidFileName = `video${videoCount}`; // –ë–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –≤–∏–¥–µ–æ –≤ Android
        }
        
        const galleryItem = {
            type: type,
            fileName: androidFileName,
            title: title,
            description: description,
            originalFile: file,
            originalFileName: file.name
        };
        
        galleryItems.push(galleryItem);
        mediaFiles.set(androidFileName, file);
    });
    
    // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
    document.getElementById('item-title').value = '';
    document.getElementById('item-description').value = '';
    clearCurrentFiles();
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    updateGalleryDisplay();
    updateStatistics();
    saveData();
    
    alert(`–î–æ–±–∞–≤–ª–µ–Ω–æ ${currentFiles.length} —ç–ª–µ–º–µ–Ω—Ç(–æ–≤) –≤ –≥–∞–ª–µ—Ä–µ—é!`);
}

// –û—á–∏—Å—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
function clearCurrentFiles() {
    currentFiles = [];
    document.getElementById('file-input').value = '';
    document.getElementById('file-preview').innerHTML = '';
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–∞–ª–µ—Ä–µ–∏
function updateGalleryDisplay() {
    const container = document.getElementById('gallery-items');
    container.innerHTML = '';
    
    if (galleryItems.length === 0) {
        container.innerHTML = '<p style="color: #666; text-align: center; padding: 20px;">–ü–æ–∫–∞ –Ω–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –≥–∞–ª–µ—Ä–µ–µ</p>';
        return;
    }
    
    galleryItems.forEach((item, index) => {
        const itemDiv = document.createElement('div');
        itemDiv.className = 'gallery-item';
        
        itemDiv.innerHTML = `
            <div class="type-badge ${item.type === 'photo' ? 'type-photo' : 'type-video'}">
                ${item.type === 'photo' ? 'üì∑ –§–æ—Ç–æ' : 'üé¨ –í–∏–¥–µ–æ'}
            </div>
            <h4>${item.title}</h4>
            <p><strong>–ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª:</strong> ${item.originalFileName || item.fileName}</p>
            <p><strong>–ò–º—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:</strong> <code>${item.fileName}</code></p>
            <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${item.description}</p>
            <button class="btn btn-danger" onclick="removeGalleryItem(${index})">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
        `;
        
        container.appendChild(itemDiv);
    });
}

// –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≥–∞–ª–µ—Ä–µ–∏
function removeGalleryItem(index) {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç?')) {
        const item = galleryItems[index];
        mediaFiles.delete(item.fileName);
        galleryItems.splice(index, 1);
        
        // –ü–µ—Ä–µ–Ω—É–º–µ—Ä–æ–≤–∞—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Ñ–∞–π–ª—ã
        renumberGalleryItems();
        
        updateGalleryDisplay();
        updateStatistics();
        saveData();
    }
}

// –ü–µ—Ä–µ–Ω—É–º–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
function renumberGalleryItems() {
    const newMediaFiles = new Map();
    let photoCounter = 1;
    let videoCounter = 1;
    
    galleryItems.forEach(item => {
        const oldFileName = item.fileName;
        const oldFile = mediaFiles.get(oldFileName);
        
        if (item.type === 'photo') {
            const fileExtension = item.originalFileName ? 
                item.originalFileName.split('.').pop().toLowerCase() : 
                oldFileName.split('.').pop().toLowerCase();
            item.fileName = `photo${photoCounter}.${fileExtension}`;
            photoCounter++;
        } else {
            item.fileName = `video${videoCounter}`;
            videoCounter++;
        }
        
        if (oldFile) {
            newMediaFiles.set(item.fileName, oldFile);
        }
    });
    
    mediaFiles.clear();
    newMediaFiles.forEach((value, key) => {
        mediaFiles.set(key, value);
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function updateStatistics() {
    const photoCount = galleryItems.filter(item => item.type === 'photo').length;
    const videoCount = galleryItems.filter(item => item.type === 'video').length;
    const totalCount = galleryItems.length;
    
    document.getElementById('photo-count').textContent = photoCount;
    document.getElementById('video-count').textContent = videoCount;
    document.getElementById('total-count').textContent = totalCount;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
function updateExportStatistics() {
    document.getElementById('export-gallery-count').textContent = galleryItems.length;
    document.getElementById('export-love-count').textContent = appTexts.loveMessages.length;
    document.getElementById('export-mission-count').textContent = appTexts.missions.length;
    document.getElementById('export-files-count').textContent = mediaFiles.size;
}

// === –†–ê–ë–û–¢–ê –° –¢–ï–ö–°–¢–ê–ú–ò ===

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤
function loadTextCategory() {
    const category = document.getElementById('text-category').value;
    const titleElement = document.getElementById('text-list-title');
    const missionGroup = document.getElementById('mission-description-group');
    
    // –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –ø–æ–ª–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –º–∏—Å—Å–∏–π
    if (category === 'missions' || category === 'journey') {
        missionGroup.style.display = 'block';
    } else {
        missionGroup.style.display = 'none';
    }
    
    // –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const titles = {
        'love-messages': 'üíï –°–æ–æ–±—â–µ–Ω–∏—è –ª—é–±–≤–∏:',
        'missions': 'üéØ –ú–∏—Å—Å–∏–∏:',
        'jokes': 'üòÑ –ê–Ω–µ–∫–¥–æ—Ç—ã:',
        'facts': 'üß† –§–∞–∫—Ç—ã:',
        'journey': 'üó∫Ô∏è –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ö–æ–¥–∏–ª–∫–∏:'
    };
    titleElement.textContent = titles[category];
    
    displayTexts(category);
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤
function displayTexts(category) {
    const container = document.getElementById('text-items');
    container.innerHTML = '';
    
    let texts = [];
    switch(category) {
        case 'love-messages':
            texts = appTexts.loveMessages;
            break;
        case 'missions':
            texts = appTexts.missions;
            break;
        case 'jokes':
            texts = appTexts.jokes;
            break;
        case 'facts':
            texts = appTexts.facts;
            break;
        case 'journey':
            texts = appTexts.journeyContent;
            break;
    }
    
    if (texts.length === 0) {
        container.innerHTML = '<p style="color: #666; text-align: center; padding: 20px;">–ù–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</p>';
        return;
    }
    
    texts.forEach((text, index) => {
        const textDiv = document.createElement('div');
        textDiv.className = 'text-item';
        
        if (Array.isArray(text)) {
            // –î–ª—è –º–∏—Å—Å–∏–π –∏ —Ö–æ–¥–∏–ª–∫–∏ (–º–∞—Å—Å–∏–≤ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏—è)
            textDiv.innerHTML = `
                <h5>${text[0]}</h5>
                <p>${text[1]}</p>
                <button class="btn btn-danger" onclick="removeText('${category}', ${index})" style="margin-top: 10px;">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
            `;
        } else {
            // –î–ª—è –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤
            textDiv.innerHTML = `
                <p>${text}</p>
                <button class="btn btn-danger" onclick="removeText('${category}', ${index})" style="margin-top: 10px;">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
            `;
        }
        
        container.appendChild(textDiv);
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
function addText() {
    const category = document.getElementById('text-category').value;
    const newText = document.getElementById('new-text').value.trim();
    const missionDescription = document.getElementById('mission-description').value.trim();
    
    if (!newText) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç');
        return;
    }
    
    if ((category === 'missions' || category === 'journey') && !missionDescription) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ');
        return;
    }
    
    let textToAdd;
    if (category === 'missions' || category === 'journey') {
        textToAdd = [newText, missionDescription];
    } else {
        textToAdd = newText;
    }
    
    switch(category) {
        case 'love-messages':
            appTexts.loveMessages.push(textToAdd);
            break;
        case 'missions':
            appTexts.missions.push(textToAdd);
            break;
        case 'jokes':
            appTexts.jokes.push(textToAdd);
            break;
        case 'facts':
            appTexts.facts.push(textToAdd);
            break;
        case 'journey':
            appTexts.journeyContent.push(textToAdd);
            break;
    }
    
    // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
    document.getElementById('new-text').value = '';
    document.getElementById('mission-description').value = '';
    
    displayTexts(category);
    saveData();
    alert('–¢–µ–∫—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω!');
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
function removeText(category, index) {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç?')) {
        switch(category) {
            case 'love-messages':
                appTexts.loveMessages.splice(index, 1);
                break;
            case 'missions':
                appTexts.missions.splice(index, 1);
                break;
            case 'jokes':
                appTexts.jokes.splice(index, 1);
                break;
            case 'facts':
                appTexts.facts.splice(index, 1);
                break;
            case 'journey':
                appTexts.journeyContent.splice(index, 1);
                break;
        }
        
        displayTexts(category);
        saveData();
    }
}

// –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function clearAllTexts() {
    const category = document.getElementById('text-category').value;
    
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï —Ç–µ–∫—Å—Ç—ã –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏?')) {
        switch(category) {
            case 'love-messages':
                appTexts.loveMessages = [];
                break;
            case 'missions':
                appTexts.missions = [];
                break;
            case 'jokes':
                appTexts.jokes = [];
                break;
            case 'facts':
                appTexts.facts = [];
                break;
            case 'journey':
                appTexts.journeyContent = [];
                break;
        }
        
        displayTexts(category);
        saveData();
        alert('–í—Å–µ —Ç–µ–∫—Å—Ç—ã —É–¥–∞–ª–µ–Ω—ã!');
    }
}

// === –≠–ö–°–ü–û–†–¢ –î–ê–ù–ù–´–• ===

// –≠–∫—Å–ø–æ—Ä—Ç GalleryConfig.java
function exportGalleryConfig() {
    let javaCode = `package com.napominalochka.app.config;

public class GalleryConfig {
    
    // ========== –ú–ï–î–ò–ê –≠–õ–ï–ú–ï–ù–¢–´ –ì–ê–õ–ï–†–ï–ò ==========
    // –§–æ—Ä–º–∞—Ç: {—Ç–∏–ø, –∏–º—è_—Ñ–∞–π–ª–∞, –∑–∞–≥–æ–ª–æ–≤–æ–∫, –æ–ø–∏—Å–∞–Ω–∏–µ}
    // –¢–∏–ø—ã: "photo" –∏–ª–∏ "video"
    
    public static final String[][] GALLERY_ITEMS = {
`;

    galleryItems.forEach((item, index) => {
        const comma = index < galleryItems.length - 1 ? ',' : '';
        const escapedTitle = item.title.replace(/"/g, '\\"');
        const escapedDescription = item.description.replace(/"/g, '\\"');
        
        javaCode += `        {"${item.type}", "${item.fileName}", "${escapedTitle}", "${escapedDescription}"}${comma}\n`;
    });

    javaCode += `    };
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤–∏–¥–µ–æ
    public static boolean isVideo(String[] item) {
        return "video".equals(item[0]);
    }
    
    // –ü–æ–ª—É—á–∏—Ç—å –∏–º—è —Ñ–∞–π–ª–∞
    public static String getFileName(String[] item) {
        return item[1];
    }
    
    // –ü–æ–ª—É—á–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫
    public static String getTitle(String[] item) {
        return item[2];
    }
    
    // –ü–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
    public static String getDescription(String[] item) {
        return item[3];
    }
}`;

    downloadFile('GalleryConfig.java', javaCode);
}

// –≠–∫—Å–ø–æ—Ä—Ç AppTexts.java
function exportAppTexts() {
    let javaCode = `package com.napominalochka.app.config;

public class AppTexts {
    
    // ========== –°–ï–ö–†–ï–¢–ù–´–ô –ö–û–î ==========
    public static final String SECRET_CODE = "–õ–Æ–ë–û–í–¨";
    
    // ========== –°–û–û–ë–©–ï–ù–ò–Ø –õ–Æ–ë–í–ò (–ë–ê–¢–ê–†–ï–ô–ö–ê) ==========
    public static final String[] LOVE_MESSAGES = {
`;

    appTexts.loveMessages.forEach((msg, index) => {
        const comma = index < appTexts.loveMessages.length - 1 ? ',' : '';
        const escapedMsg = msg.replace(/"/g, '\\"').replace(/\n/g, '\\n');
        javaCode += `        "${escapedMsg}"${comma}\n`;
    });

    javaCode += `    };
    
    // ========== –ú–ò–°–°–ò–ò ==========
    public static final String[][] MISSIONS = {
`;

    appTexts.missions.forEach((mission, index) => {
        const comma = index < appTexts.missions.length - 1 ? ',' : '';
        const escapedTitle = mission[0].replace(/"/g, '\\"');
        const escapedDesc = mission[1].replace(/"/g, '\\"').replace(/\n/g, '\\n');
        javaCode += `        {"${escapedTitle}", "${escapedDesc}"}${comma}\n`;
    });

    javaCode += `    };
    
    // ========== –°–û–î–ï–†–ñ–ò–ú–û–ï –ò–ì–†–´-–•–û–î–ò–õ–ö–ò ==========
    public static final String[][] JOURNEY_CONTENT = {
`;

    appTexts.journeyContent.forEach((content, index) => {
        const comma = index < appTexts.journeyContent.length - 1 ? ',' : '';
        const escapedTitle = content[0].replace(/"/g, '\\"');
        const escapedDesc = content[1].replace(/"/g, '\\"').replace(/\n/g, '\\n');
        javaCode += `        {"${escapedTitle}", "${escapedDesc}"}${comma}\n`;
    });

    javaCode += `    };
    
    // ========== –ê–ù–ï–ö–î–û–¢–´ –ò –§–ê–ö–¢–´ (–ì–ï–ù–ï–†–ê–¢–û–† –†–ê–î–û–°–¢–ò) ==========
    public static final String[] JOKES = {
`;

    appTexts.jokes.forEach((joke, index) => {
        const comma = index < appTexts.jokes.length - 1 ? ',' : '';
        const escapedJoke = joke.replace(/"/g, '\\"').replace(/\n/g, '\\n');
        javaCode += `        "${escapedJoke}"${comma}\n`;
    });

    javaCode += `    };
    
    public static final String[] FACTS = {
`;

    appTexts.facts.forEach((fact, index) => {
        const comma = index < appTexts.facts.length - 1 ? ',' : '';
        const escapedFact = fact.replace(/"/g, '\\"').replace(/\n/g, '\\n');
        javaCode += `        "${escapedFact}"${comma}\n`;
    });

    javaCode += `    };
    
    // ========== –°–ï–ö–†–ï–¢–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï ==========
    public static final String SECRET_MESSAGE = 
        "üíñ –û–°–û–ë–û–ï –ü–û–°–õ–ê–ù–ò–ï –î–õ–Ø –¢–ï–ë–Ø üíñ\\n\\n" +
        "–ø–æ–∑–¥—Ä–∞–≤–ª—è—é! —Ç—ã –Ω–∞—à–ª–∞ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á! üóùÔ∏è\\n\\n" +
        "—ç—Ç–æ—Ç —Å—é—Ä–ø—Ä–∏–∑ –±—ã–ª —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è, –ø–æ—Ç–æ–º—É —á—Ç–æ:\\n\\n" +
        "üåü —Ç—ã –æ—Å–≤–µ—â–∞–µ—à—å –∫–∞–∂–¥—ã–π –º–æ–π –¥–µ–Ω—å\\n" +
        "üí´ —Å —Ç–æ–±–æ–π —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —Å–∞–º—ã–º —Å—á–∞—Å—Ç–ª–∏–≤—ã–º\\n" +
        "ü¶ã —Ç—ã –ø—Ä–µ–≤—Ä–∞—â–∞–µ—à—å –æ–±—ã—á–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –≤ –≤–æ–ª—à–µ–±—Å—Ç–≤–æ\\n" +
        "üåà —Ç–≤–æ—è —É–ª—ã–±–∫–∞ - –º–æ–π —Å–∞–º—ã–π –ª—é–±–∏–º—ã–π —Ü–≤–µ—Ç\\n" +
        "‚≠ê —Ç—ã - –∑–≤–µ–∑–¥–∞ –ø–æ –∫–æ—Ç–æ—Ä–æ–π —è –≤—ã–±–∏—Ä–∞—é –ø—É—Ç—å\\n\\n" +
        "—ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ - –º–∞–ª–µ–Ω—å–∫–∞—è —á–∞—Å—Ç–∏—á–∫–∞ –º–æ–µ–π –¥—É—à–∏ –∫–æ—Ç–æ—Ä—É—é —è –¥–∞—Ä—é —Ç–µ–±–µ. " +
        "–∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ—á–∫–∞ –∫–æ–¥–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ —Å –º—ã—Å–ª—è–º–∏ –æ —Ç–µ–±–µ. üíªüíï\\n\\n" +
        "—Å–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ —á—Ç–æ —Ç—ã –µ—Å—Ç—å –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏! üôè\\n\\n" +
        "—Å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –ª—é–±–æ–≤—å—é,\\n—Ç–≤–æ–π –ª—é–±—è—â–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ üë®‚Äçüíª‚ù§Ô∏è";
}`;

    downloadFile('AppTexts.java', javaCode);
}

// –≠–∫—Å–ø–æ—Ä—Ç –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤ –∫–∞–∫ ZIP
async function exportMediaFiles() {
    if (mediaFiles.size === 0) {
        alert('–ù–µ—Ç –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞');
        return;
    }

    try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º JSZip –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞
        const JSZip = await loadJSZip();
        const zip = new JSZip();
        
        // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏
        const photosFolder = zip.folder("photos");
        const videosFolder = zip.folder("videos");
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞–ø–∫–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
        for (const [androidFileName, file] of mediaFiles.entries()) {
            const isPhoto = file.type.startsWith('image/');
            const folder = isPhoto ? photosFolder : videosFolder;
            
            // –î–ª—è —Ñ–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º, –¥–ª—è –≤–∏–¥–µ–æ - –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è (–∫–∞–∫ –≤ Android)
            let finalFileName = androidFileName;
            if (!isPhoto && !androidFileName.includes('.')) {
                // –î–ª—è –≤–∏–¥–µ–æ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ –∞—Ä—Ö–∏–≤
                const originalExtension = file.name.split('.').pop().toLowerCase();
                finalFileName = `${androidFileName}.${originalExtension}`;
            }
            
            folder.file(finalFileName, file);
        }
        
        // –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
        const content = await zip.generateAsync({type: "blob"});
        downloadFile('media_files.zip', content);
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞:', error);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Ä—Ö–∏–≤–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª—ã –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏.');
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ–≥–æ –æ–¥–Ω–∏–º –∞—Ä—Ö–∏–≤–æ–º
async function exportAll() {
    try {
        const JSZip = await loadJSZip();
        const zip = new JSZip();
        
        // –î–æ–±–∞–≤–ª—è–µ–º Java —Ñ–∞–π–ª—ã
        zip.file("GalleryConfig.java", generateGalleryConfigContent());
        zip.file("AppTexts.java", generateAppTextsContent());
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã
        if (mediaFiles.size > 0) {
            const photosFolder = zip.folder("media/photos");
            const videosFolder = zip.folder("media/videos");
            
            for (const [androidFileName, file] of mediaFiles.entries()) {
                const isPhoto = file.type.startsWith('image/');
                const folder = isPhoto ? photosFolder : videosFolder;
                
                // –î–ª—è —Ñ–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º, –¥–ª—è –≤–∏–¥–µ–æ - –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è (–∫–∞–∫ –≤ Android)
                let finalFileName = androidFileName;
                if (!isPhoto && !androidFileName.includes('.')) {
                    // –î–ª—è –≤–∏–¥–µ–æ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ –∞—Ä—Ö–∏–≤
                    const originalExtension = file.name.split('.').pop().toLowerCase();
                    finalFileName = `${androidFileName}.${originalExtension}`;
                }
                
                folder.file(finalFileName, file);
            }
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º README
        const readme = `# –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö "–ù–∞–ø–æ–º–∏–Ω–∞–ª–æ—á–∫–∞"

–≠—Ç–æ—Ç –∞—Ä—Ö–∏–≤ —Å–æ–¥–µ—Ä–∂–∏—Ç:

1. **GalleryConfig.java** - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–∞–ª–µ—Ä–µ–∏ (${galleryItems.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
2. **AppTexts.java** - –≤—Å–µ —Ç–µ–∫—Å—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
3. **media/photos/** - —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (${galleryItems.filter(i => i.type === 'photo').length} —Ñ–∞–π–ª–æ–≤)
4. **media/videos/** - –≤–∏–¥–µ–æ (${galleryItems.filter(i => i.type === 'video').length} —Ñ–∞–π–ª–æ–≤)

## –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ:

1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ Java —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫—É app/src/main/java/com/napominalochka/app/config/
2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞–ø–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤ Android –ø—Ä–æ–µ–∫—Ç–∞
3. –ü–µ—Ä–µ—Å–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

–°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é –ú–µ–Ω–µ–¥–∂–µ—Ä–∞ –≥–∞–ª–µ—Ä–µ–∏ "–ù–∞–ø–æ–º–∏–Ω–∞–ª–æ—á–∫–∞"
–î–∞—Ç–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: ${new Date().toLocaleString('ru-RU')}`;

        zip.file("README.md", readme);
        
        // –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
        const content = await zip.generateAsync({type: "blob"});
        downloadFile('napominalochka_export.zip', content);
        
        alert('–ü–æ–ª–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞:', error);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Ä—Ö–∏–≤–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏.');
    }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
function generateGalleryConfigContent() {
    // ... (–∫–æ–¥ –∏–∑ exportGalleryConfig, –Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–æ–∫—É –≤–º–µ—Å—Ç–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è)
    let javaCode = `package com.napominalochka.app.config;

public class GalleryConfig {
    
    // ========== –ú–ï–î–ò–ê –≠–õ–ï–ú–ï–ù–¢–´ –ì–ê–õ–ï–†–ï–ò ==========
    // –§–æ—Ä–º–∞—Ç: {—Ç–∏–ø, –∏–º—è_—Ñ–∞–π–ª–∞, –∑–∞–≥–æ–ª–æ–≤–æ–∫, –æ–ø–∏—Å–∞–Ω–∏–µ}
    // –¢–∏–ø—ã: "photo" –∏–ª–∏ "video"
    
    public static final String[][] GALLERY_ITEMS = {
`;

    galleryItems.forEach((item, index) => {
        const comma = index < galleryItems.length - 1 ? ',' : '';
        const escapedTitle = item.title.replace(/"/g, '\\"');
        const escapedDescription = item.description.replace(/"/g, '\\"');
        
        javaCode += `        {"${item.type}", "${item.fileName}", "${escapedTitle}", "${escapedDescription}"}${comma}\n`;
    });

    javaCode += `    };
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤–∏–¥–µ–æ
    public static boolean isVideo(String[] item) {
        return "video".equals(item[0]);
    }
    
    // –ü–æ–ª—É—á–∏—Ç—å –∏–º—è —Ñ–∞–π–ª–∞
    public static String getFileName(String[] item) {
        return item[1];
    }
    
    // –ü–æ–ª—É—á–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫
    public static String getTitle(String[] item) {
        return item[2];
    }
    
    // –ü–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
    public static String getDescription(String[] item) {
        return item[3];
    }
}`;

    return javaCode;
}

function generateAppTextsContent() {
    let javaCode = `package com.napominalochka.app.config;

public class AppTexts {
    
    // ========== –°–ï–ö–†–ï–¢–ù–´–ô –ö–û–î ==========
    public static final String SECRET_CODE = "–õ–Æ–ë–û–í–¨";
    
    // ========== –°–û–û–ë–©–ï–ù–ò–Ø –õ–Æ–ë–í–ò (–ë–ê–¢–ê–†–ï–ô–ö–ê) ==========
    public static final String[] LOVE_MESSAGES = {
`;

    appTexts.loveMessages.forEach((msg, index) => {
        const comma = index < appTexts.loveMessages.length - 1 ? ',' : '';
        const escapedMsg = msg.replace(/"/g, '\\"').replace(/\n/g, '\\n');
        javaCode += `        "${escapedMsg}"${comma}\n`;
    });

    javaCode += `    };
    
    // ========== –ú–ò–°–°–ò–ò ==========
    public static final String[][] MISSIONS = {
`;

    appTexts.missions.forEach((mission, index) => {
        const comma = index < appTexts.missions.length - 1 ? ',' : '';
        const escapedTitle = mission[0].replace(/"/g, '\\"');
        const escapedDesc = mission[1].replace(/"/g, '\\"').replace(/\n/g, '\\n');
        javaCode += `        {"${escapedTitle}", "${escapedDesc}"}${comma}\n`;
    });

    javaCode += `    };
    
    // ========== –°–û–î–ï–†–ñ–ò–ú–û–ï –ò–ì–†–´-–•–û–î–ò–õ–ö–ò ==========
    public static final String[][] JOURNEY_CONTENT = {
`;

    appTexts.journeyContent.forEach((content, index) => {
        const comma = index < appTexts.journeyContent.length - 1 ? ',' : '';
        const escapedTitle = content[0].replace(/"/g, '\\"');
        const escapedDesc = content[1].replace(/"/g, '\\"').replace(/\n/g, '\\n');
        javaCode += `        {"${escapedTitle}", "${escapedDesc}"}${comma}\n`;
    });

    javaCode += `    };
    
    // ========== –ê–ù–ï–ö–î–û–¢–´ –ò –§–ê–ö–¢–´ (–ì–ï–ù–ï–†–ê–¢–û–† –†–ê–î–û–°–¢–ò) ==========
    public static final String[] JOKES = {
`;

    appTexts.jokes.forEach((joke, index) => {
        const comma = index < appTexts.jokes.length - 1 ? ',' : '';
        const escapedJoke = joke.replace(/"/g, '\\"').replace(/\n/g, '\\n');
        javaCode += `        "${escapedJoke}"${comma}\n`;
    });

    javaCode += `    };
    
    public static final String[] FACTS = {
`;

    appTexts.facts.forEach((fact, index) => {
        const comma = index < appTexts.facts.length - 1 ? ',' : '';
        const escapedFact = fact.replace(/"/g, '\\"').replace(/\n/g, '\\n');
        javaCode += `        "${escapedFact}"${comma}\n`;
    });

    javaCode += `    };
    
    // ========== –°–ï–ö–†–ï–¢–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï ==========
    public static final String SECRET_MESSAGE = 
        "üíñ –û–°–û–ë–û–ï –ü–û–°–õ–ê–ù–ò–ï –î–õ–Ø –¢–ï–ë–Ø üíñ\\n\\n" +
        "–ø–æ–∑–¥—Ä–∞–≤–ª—è—é! —Ç—ã –Ω–∞—à–ª–∞ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á! üóùÔ∏è\\n\\n" +
        "—ç—Ç–æ—Ç —Å—é—Ä–ø—Ä–∏–∑ –±—ã–ª —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è, –ø–æ—Ç–æ–º—É —á—Ç–æ:\\n\\n" +
        "üåü —Ç—ã –æ—Å–≤–µ—â–∞–µ—à—å –∫–∞–∂–¥—ã–π –º–æ–π –¥–µ–Ω—å\\n" +
        "üí´ —Å —Ç–æ–±–æ–π —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —Å–∞–º—ã–º —Å—á–∞—Å—Ç–ª–∏–≤—ã–º\\n" +
        "ü¶ã —Ç—ã –ø—Ä–µ–≤—Ä–∞—â–∞–µ—à—å –æ–±—ã—á–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –≤ –≤–æ–ª—à–µ–±—Å—Ç–≤–æ\\n" +
        "üåà —Ç–≤–æ—è —É–ª—ã–±–∫–∞ - –º–æ–π —Å–∞–º—ã–π –ª—é–±–∏–º—ã–π —Ü–≤–µ—Ç\\n" +
        "‚≠ê —Ç—ã - –∑–≤–µ–∑–¥–∞ –ø–æ –∫–æ—Ç–æ—Ä–æ–π —è –≤—ã–±–∏—Ä–∞—é –ø—É—Ç—å\\n\\n" +
        "—ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ - –º–∞–ª–µ–Ω—å–∫–∞—è —á–∞—Å—Ç–∏—á–∫–∞ –º–æ–µ–π –¥—É—à–∏ –∫–æ—Ç–æ—Ä—É—é —è –¥–∞—Ä—é —Ç–µ–±–µ. " +
        "–∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ—á–∫–∞ –∫–æ–¥–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ —Å –º—ã—Å–ª—è–º–∏ –æ —Ç–µ–±–µ. üíªüíï\\n\\n" +
        "—Å–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ —á—Ç–æ —Ç—ã –µ—Å—Ç—å –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏! üôè\\n\\n" +
        "—Å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –ª—é–±–æ–≤—å—é,\\n—Ç–≤–æ–π –ª—é–±—è—â–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ üë®‚Äçüíª‚ù§Ô∏è";
}`;

    return javaCode;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ JSZip –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
async function loadJSZip() {
    if (window.JSZip) {
        return window.JSZip;
    }
    
    return new Promise((resolve, reject) => {
        const script = document.createElement('script');
        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js';
        script.onload = () => resolve(window.JSZip);
        script.onerror = reject;
        document.head.appendChild(script);
    });
}

// –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
function downloadFile(filename, content) {
    const blob = content instanceof Blob ? content : new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = filename;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
}

// === –°–û–•–†–ê–ù–ï–ù–ò–ï –ò –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• ===

function saveData() {
    const data = {
        galleryItems: galleryItems,
        appTexts: appTexts,
        timestamp: Date.now()
    };
    
    localStorage.setItem('napominalochka_data', JSON.stringify(data));
}

function loadSavedData() {
    const saved = localStorage.getItem('napominalochka_data');
    if (saved) {
        try {
            const data = JSON.parse(saved);
            if (data.galleryItems) {
                galleryItems = data.galleryItems;
                updateGalleryDisplay();
                updateStatistics();
            }
            if (data.appTexts) {
                appTexts = data.appTexts;
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
        }
    }
}